name: pr
on:
  pull_request:
    branches:
      - main
    paths:
      - src/**
env:
  solution_name: CodeFirstFusionExample
  solution_src_root: src/solutions/CodeFirstFusionExample

jobs:
  pr:
    runs-on: windows-latest 

    steps:
      - uses: actions/checkout@v2

      - name: install-and-cache-powershell-modules
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v4
        with:
          modules-to-cache: Microsoft.Xrm.Data.PowerShell
          shell: powershell

      - name: set-environment-settings
        shell: powershell
        run: |          
          Import-Module Xrm.Data.PowerShell

          Connect-CrmOnline -ServerUrl ${{ secrets.ENVIRONMENT_URL }} -OAuthClientId ${{ secrets.CLIENT_ID }} -ClientSecret ${{ secrets.CLIENT_SECRET }}
          # Need to turn on Environment setting to enable PCF for Canvas
          
          $updateFields.Add("IsCustomControlsInCanvasAppsEnabled".ToLower(), $true)
          Set-CrmRecord -conn $conn -EntityLogicalName organization -Id (Invoke-CrmWhoAmI).OrganizationId -Fields $updateFields

      # - name: build
      #   shell: pwsh
      #   run: |          
      #     $currentDirectory = Get-Location          
      #     $pcfDirectory = "$env:solution_src_root/pcf-components"
      #     cd $pcfDirectory
      #     npm install
      #     cd $currentDirectory          
      #     echo 'Building cdsproj for solution...'
      #     cd $env:solution_src_root
      #     dotnet build -c Release
      #     cd $currentDirectory
      
      # - name: upload-artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: artifact
      #     path: ${{ env.solution_src_root }}/bin/Release      
      
      # - name: import-solution
      #   uses: microsoft/powerplatform-actions/import-solution@0.4.3
      #   with:
      #     environment-url: ${{ secrets.ENVIRONMENT_URL }}
      #     tenant-id: ${{ secrets.TENANT_ID }}
      #     app-id: ${{ secrets.CLIENT_ID }}
      #     client-secret: ${{ secrets.CLIENT_SECRET }}
      #     solution-file: ${{ env.solution_src_root }}/bin/Release/${{ env.solution_name }}_managed.zip 
      #     force-overwrite: true
      #     run-asynchronously: true